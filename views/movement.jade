extends layout

block content
  script.
    var rplot;
    var colors = [ "#0071bc" ];
    $(document).ready(function(){
      function format_unixtime(unixtime) {
        var a = new Date(unixtime*1000);  
        var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
        var year = a.getFullYear();
        var month = months[a.getMonth()];
        var date = a.getDate();
        var hour = a.getHours();
        var min = a.getMinutes();
        var sec = a.getSeconds();
        var suffix = 'th'
        if (date == 1 || date == 21 || date == 31)
          suffix = 'st';
        if (date == 2 || date == 22 || date == 32)
          suffix = 'nd';
        if (date == 3 || date == 23)
          suffix = 'rd';
        if (hour < 10)
          hour = '0' + hour;
        if (min < 10)
          min = '0' + min;
        if (sec < 10)
          sec = '0' + sec;
        var time = date + suffix + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;   
        return time;
      }

      var rtable = $('#alerts-table').dataTable( {  
        autoWidth: false,      
        searching: false,
        ordering: false,
        //responsive: true,
        lengthChange: false,
        //processing: true,
        ajax: {
          url: '/ext/getlastrealtxs/#{min_amount}',
          dataSrc: function ( json ) {
            for ( var i=0;i<json.data.length; i++ ) {
              json.data[i]['timestamp'] = new Date((json.data[i]['timestamp']) * 1000).toLocaleString();
              json.data[i]['txid'] = "<a href='/tx/" + json.data[i]['txid'] + "' class='mono' target='_blank'>" + json.data[i]['txid'] + "</a>"
              var amount = (json.data[i]['total'] / 100000000).toFixed(6);
              if (amount > #{flagb}) {
                json .data[i]['total'] = "<label class='label label-danger'>" + amount + "</label>";
              } else if (amount > #{flaga}) {
                json .data[i]['total'] = "<label class='label label-warning'>" + amount + "</label>";
              } else {
                json .data[i]['total'] = "<label class='label label-success'>" + amount + "</label>";
              }
            }
            return json.data;
          }
        },
        columns: [
          { data: 'timestamp', width: '25%' },
          { data: 'txid', width: '60%' },
          { data: 'total', width: '15%' },
        ]
      });

      {
        var baseTime = new Date(new Date().toLocaleDateString()).getTime()/1000-59*86400;//parseInt(new Date().getTime()/1000) - 59 * 86400;
        //alert(baseTime);
        var timeData = [];
        var timestampData = [];
        var timeNumData = [];
        var timeAmountData = [];
        var TIME_LEN = 60;
        for(var i = 0; i <= TIME_LEN; i++)
        {
          var time = baseTime + i * 86400;
          var strTime = format_unixtime_to_day(time);
          timeData.push(strTime);
          timestampData.push(time);
          timeNumData.push(0);
          var amoutItem = {time:"",amount:0};
          amoutItem.time = strTime;
          timeAmountData.push(amoutItem);
        }
        //alert("test1");
        //alert(timeAmountData);
        var url = '';
        url='/ext/getrealtxsbytime?second=' + baseTime;
        //alert(url);
        var ajaxReq = $.ajax ({
          url: url,
          success: function( json ){
            //alert(json.data.length);
            var j = 0;
            for ( var i=json.data.length-1;i>=0; i-- ) {
              //alert("test2");
              //alert(timeAmountData[j].time);
              //alert(i);
              //alert(json.data[i].timestamp);
              if(json.data[i].timestamp >= timestampData[j] && json.data[i].timestamp <= timestampData[j+1])
              {
                //alert("test3");
                timeAmountData[j].amount += json.data[i].total/100000000;
                //alert(timeAmountData[j].amount);
              }
              else
              {
                //alert("test4");
                //alert(j);
                //alert(j);
                j++;
                for(; j < TIME_LEN; j++)
                {
                  //alert(timestampData[j]);
                  if(json.data[i].timestamp >= timestampData[j] && json.data[i].timestamp <= timestampData[j+1])
                  {
                    //alert("test3");
                    timeAmountData[j].amount += json.data[i].total/100000000;
                    //alert("test4");
                    break;
                  }
                }
                if(j >= TIME_LEN)
                {
                  j = 0;
                  //continue;
                }
              }
            }

            for( var i = 0; i < TIME_LEN ; i++)
            {
              timeAmountData[i].amount = (timeAmountData[i].amount).toFixed(6);
            }
            //alert(timeAmountData);
            AmCharts.makeChart("txChart", {
            "type": "serial",
            "theme": "black",
            "marginRight": 80,
            "dataProvider": timeAmountData,
            "fill": "green",
            "borderColor": "green",
            "valueAxes": [{
              "position": "left",
              "axisColor": "green",
              "color": "green",
              "title": "交易金额",
              "titleColor": "#575757"
            }],
            "graphs": [{
              "id": "g1",
              "fillAlphas": 0.4,
              "valueField": "amount",
              "lineColor": "green",
              "balloonText": "<div style='margin:5px; font-size:19px;'>金额:<b> [[value]]</b></div>",   
              }
            ],
            "chartCursor": {
              "categoryBalloonDateFormat": "JJ:NN, DD MMMM",
              "cursorPosition": "mouse"
            },
            "categoryField": "time",
            "categoryAxis": {
              "gridAlpha": 0,
              "position": "left",
              "labelsEnabled": true,
              "axisColor": "green",
              "color": "green",
              "gridColor": "green",
              "title": "日期",
              "titleColor": "#575757",
              "tickLength": 0
            },
            "chartScrollbar": {
              "graph": "g1",
              "oppositeAxis": false,
              "offset": 30,
              "scrollbarHeight": 50,
              "backgroundAlpha": 0,
              "selectedBackgroundAlpha": 0.1,
              "selectedBackgroundColor": "#888888",
              "graphFillAlpha": 0,
              "graphLineAlpha": 0.5,
              "selectedGraphFillAlpha": 0,
              "selectedGraphLineAlpha": 1,
              "autoGridCount": true,
              "color": "#AAAAAA"
            },
            "export": {
              "enabled": true,
            }
          });
            
            /*var myTXCharts = echarts.init(document.getElementById('txChart'));
            option = {
              backgroundColor: '#D1EEEE',
              title: {
                text: '',
                left: 'center'
              },
              tooltip: {
                trigger: 'axis',
                position: function (pt) {
                  return [pt[0], '10%'];
                }
              },
              toolbox: {
                feature: {
                  dataZoom: {
                    yAxisIndex: 'none'
                  },
                  restore: {},
                  saveAsImage: {}
                }
              },
              xAxis: {
                type: 'category',
                boundaryGap: false,
                data: timeData
              },
              yAxis: {
                type: 'value',
                data: timeAmountData,
                boundaryGap: [0, '30%']
              },
              dataZoom: [{
                type: 'inside',
                start: 0,
                end: 100
              }, {
                start: 0,
                end: 100,
                handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
                handleSize: '60%',
                handleStyle: {
                  color: '#fff',
                  shadowBlur: 3,
                  shadowColor: 'rgba(0, 0, 0, 0.6)',
                  shadowOffsetX: 2,
                  shadowOffsetY: 2
                }
              }],
              series: [
              {
                name:'',
                type:'line',
                smooth:true,
                symbol: 'none',
                sampling: 'average',
                itemStyle: {
                  color: 'rgb(255, 70, 131)'
                },
                areaStyle: {
                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                    offset: 0,
                    color: 'rgb(255, 158, 68)'
                  }, {
                    offset: 1,
                    color: 'rgb(255, 70, 131)'
                  }])
                },
                data: timeAmountData
              }
              ]
            };
            myTXCharts.setOption(option);*/      
          }
        });
      }
      setInterval( function () {
        rtable.api().ajax.reload(null, false);
      }, 45000 );
    });

    function format_unixtime_to_day(unixtime) {
      var a = new Date(unixtime*1000);  
      var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
      var year = a.getFullYear();
      var month = a.getMonth()+1;//months[a.getMonth()];
      var date = a.getDate();
      var time = year + '-' + month + '-' + date;   
      return time;
    }

    function changeChartAmount() {
      var baseTime = new Date(new Date().toLocaleDateString()).getTime()/1000-59*86400;
      var amount = document.getElementById("chartAmount");
      if(amount == null)
      {
        amount = {value:100};
      }
      var timeData = [];
      var timestampData = [];
      var timeNumData = [];
      var TIME_LEN = 60;
      for(var i = 0; i <= TIME_LEN; i++)
      {
        var time = baseTime + i * 86400;
        var strTime = format_unixtime_to_day(time);
        timeData.push(strTime);
        timestampData.push(time);
        var numItem = {time:"", num: 0};
        numItem.time = strTime;
        timeNumData.push(numItem);
      }
      var url = '';
      url='/ext/gettxs?second=' + baseTime + '&amount=' + amount.value;
      var ajaxReq = $.ajax ({
        url: url,
        success: function( json ){
          var j = 0;
          for ( var i=json.data.length-1;i>=0; i-- ) {
            if(json.data[i].timestamp >= timestampData[j] && json.data[i].timestamp <= timestampData[j+1])
            {
              timeNumData[j].num++;
            }
            else
            {
              j++;
              for(; j < TIME_LEN; j++)
              {
                if(json.data[i].timestamp >= timestampData[j] && json.data[i].timestamp <= timestampData[j+1])
                {
                  timeNumData[j].num++;
                  break;
                }
              }
              if(j >= TIME_LEN)
              {
                j = 0;
                break;
              }
            }
          }
          
          AmCharts.makeChart("bigChangeChart", {
            "type": "serial",
            "theme": "black",
            "marginRight": 80,
            "dataProvider": timeNumData,
            "fill": "green",
            "borderColor": "green",
            "valueAxes": [{
              "position": "left",
              "axisColor": "green",
              "color": "green",
              "title": "数量",
              "titleColor": "#575757"
            }],
            "graphs": [{
              "id": "g1",
              "fillAlphas": 0.4,
              "valueField": "num",
              "lineColor": "green",
              "balloonText": "<div style='margin:5px; font-size:19px;'>数量:<b> [[value]]</b></div>",   
              }
            ],
            "chartCursor": {
              "categoryBalloonDateFormat": "JJ:NN, DD MMMM",
              "cursorPosition": "mouse"
            },
            "categoryField": "time",
            "categoryAxis": {
              "gridAlpha": 0,
              "position": "left",
              "labelsEnabled": true,
              "axisColor": "green",
              "color": "green",
              "gridColor": "green",
              "title": "日期",
              "titleColor": "#575757",
              "tickLength": 0
            },
            "chartScrollbar": {
              "graph": "g1",
              "oppositeAxis": false,
              "offset": 30,
              "scrollbarHeight": 50,
              "backgroundAlpha": 0,
              "selectedBackgroundAlpha": 0.1,
              "selectedBackgroundColor": "#888888",
              "graphFillAlpha": 0,
              "graphLineAlpha": 0.5,
              "selectedGraphFillAlpha": 0,
              "selectedGraphLineAlpha": 1,
              "autoGridCount": true,
              "color": "#AAAAAA"
            },
            "export": {
              "enabled": true,
            }
          });
          /*var myMapCharts = echarts.init(document.getElementById('bigChangeChart'));
          option = {
            backgroundColor: '#D1EEEE',
            title: {
              text: '',
              left: 'center'
            },
            tooltip: {
              trigger: 'axis',
              position: function (pt) {
                return [pt[0], '10%'];
              }
            },
            toolbox: {
              feature: {
                dataZoom: {
                  yAxisIndex: 'none'
                },
                restore: {},
                saveAsImage: {}
              }
            },
            xAxis: {
              type: 'category',
              boundaryGap: false,
              data: timeData
            },
            yAxis: {
              type: 'value',
              data: timeNumData,
              boundaryGap: [0, '50%']
            },
            dataZoom: [{
              type: 'inside',
              start: 0,
              end: 100
            }, {
              start: 0,
              end: 100,
              handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
              handleSize: '60%',
              handleStyle: {
                color: '#fff',
                shadowBlur: 3,
                shadowColor: 'rgba(0, 0, 0, 0.6)',
                shadowOffsetX: 2,
                shadowOffsetY: 2
              }
            }],
            series: [
            {
              name:'',
              type:'line',
              smooth:true,
              symbol: 'none',
              sampling: 'average',
              itemStyle: {
                color: 'rgb(255, 70, 131)'
              },
              areaStyle: {
                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                  offset: 0,
                  color: 'rgb(255, 158, 68)'
                }, {
                  offset: 1,
                  color: 'rgb(255, 70, 131)'
                }])
              },
              data: timeNumData
            }
            ]
          };
          myMapCharts.setOption(option);*/
        }
      });
    }

    changeChartAmount();

    var bigChangeTable = null;
    var showInterval = null;
    function updateValue()
    {
      var date = document.getElementById("selectDate");
      var chooseAmount = document.getElementById("amount");
      var address = document.getElementById("address");
      if(date == null)
      {
        date = {"value":60};
      }
      if(chooseAmount == null)
      {
        chooseAmount = {"value":1000};
      }
      var time = parseInt(new Date().getTime()/1000 - date.value * 86400);
      if(date.value == 0)
      {
        time = 0;
      }
      var url = '';
      if(address == null || address.value == '请输入地址')
      {
        url='/ext/gettxs?second=' + time + '&amount=' + chooseAmount.value;
      }
      else
      {
        url='/ext/gettxs?second=' + time + '&amount=' + chooseAmount.value + '&address=' + address.value;
      }
      if(bigChangeTable)
      {
        bigChangeTable.fnClearTable();
        $('#big-change-table').dataTable().fnDestroy();
      }
      
      bigChangeTable = $('#big-change-table').dataTable( {  
        autoWidth: false,      
        searching: false,
        ordering: false,
        lengthChange: false,
        //retrieve: true,
        ajax: {
          url: url,
          dataSrc: function ( json ) {
            if(showInterval)
            {
              clearInterval(showInterval);
            }

            for ( var i=0;i<json.data.length; i++ ) {
              var amount = (json.data[i]['total'] / 100000000).toFixed(6);
              json.data[i]['timestamp'] = new Date((json.data[i]['timestamp']) * 1000).toLocaleString();//format_unixtime(json.data[i]['timestamp']);
              json.data[i]['txid'] = "<a href='/tx/" + json.data[i]['txid'] + "' class='mono' target='_blank'>" + json.data[i]['txid'] + "</a>"
              if (amount > #{flagb}) {
                json.data[i]['total'] = "<label class='label label-danger'>" + amount + "</label>";
              } else if (amount > #{flaga}) {
                json.data[i]['total'] = "<label class='label label-warning'>" + amount + "</label>";
              } else {
                json.data[i]['total'] = "<label class='label label-success'>" + amount + "</label>";
              }
              if(json.data[i].vin.length == 0)
              {
                json.data[i]['address'] = 'PoS';
              }
              else
              {
                json.data[i]['address'] = json.data[i].vin[0]['addresses'];
              }
              //json.data[i]['height'] = 'Todo';
            }
            return json.data;
          }
        },
        columns: [
          { data: 'timestamp', width: '25%' },
          { data: 'address', width: '25%' },
          //{ data: 'height', width: '25%' },
          { data: 'total', width: '25%' },
          { data: 'txid', width: '25%' },
        ]
      });
    }
    updateValue();
    showInterval = setInterval( updateValue, 2000 );

  .col-xs-12.col-md-10.col-md-offset-1(style="margin-bottom: 5%")
    table#alerts-table.table.table-striped.table-bordered
      thead
        th 时间 
        th.hidden-xs 交易哈希
        th 金额
  
  .row
      .col-md-offset-5.col-md-2
        label #{settings.locale.txperday}
        br
      .col-md-offset-1.col-md-10
        br
        #txChart(style='width: 100%; height: 400px;')
        br
        br

      .col-md-offset-5.col-md-2
        label #{settings.locale.bigchange}
        br
      .col-lg-3.pull-right
        br
        | 金额: >= &nbsp;
        input#chartAmount(type='number', onchange='changeChartAmount()', value='100', style="width:50px; height:40px;")
        | #{settings.symbol}
        br
      .col-md-offset-1.col-md-10
        br
        #bigChangeChart(style='width: 100%; height: 400px;')
      .col-md-offset-1.col-md-10
        br
        br
        | #{settings.locale.date} : 
        select#selectDate(name='choosedate' onchange='updateValue()' style='color:#030303;height:40px;')
          option(value='1' style='color:#030303;height:40px;' selected) #{settings.locale.twentyfourhours}
          option(value='7' style='color:#030303;height:40px;') #{settings.locale.weeks}
          option(value='21' style='color:#030303;height:40px;') #{settings.locale.threeweeks}
          option(value='180' style='color:#030303;height:40px;') #{settings.locale.halfyears}
          option(value='365' style='color:#030303;height:40px;') #{settings.locale.year}
          option(value='0' style='color:#030303;height:40px;') #{settings.locale.all}
        | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;金额: >= &nbsp;
        input#amount(type='number', value='1000', onchange='updateValue()', style="width:50px; height:40px;")
        | &nbsp;#{settings.symbol} &nbsp;&nbsp;&nbsp;&nbsp;
        | #{settings.locale.mn_address}：
        input#address(type='text', value='#{settings.locale.inputaddress}', onchange='updateValue()', style="width:600px; height:40px;")

  .col-xs-12.col-md-10.col-md-offset-1(style="margin-bottom: 5%")
    table#big-change-table.table.table-striped.table-bordered
      br
      br
      thead
        th 时间 
        th.hidden-xs #{settings.locale.mn_address}
        //th #{settings.locale.height}
        th 金额
        th #{settings.locale.tx_hash}
 
