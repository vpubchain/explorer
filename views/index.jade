extends layout
block content
  script.
    $(document).ready(function() {
      $.ajax ({
        url: '/ext/getlasttxs/0.00000001',
        success: function( result ) {
          var extdata = result.data;
          extdata.sort(function(a,b){
            return a.blockindex - b.blockindex;//正序
          });
          //alert( 'test+++' );
          AmCharts.makeChart("chartdiv", {
            "type": "serial",
            "theme": "black",
            "marginRight": 80,
            "dataProvider": result.data,
            "fill": "green",
            "borderColor": "green",
            "valueAxes": [{
              "position": "left",
              "axisColor": "green",
              "color": "#FFF7FB",
              "title": "区块难度",
              "titleColor": "white"
            }],
            "graphs": [{
              "id": "g1",
              "fillAlphas": 0.4,
              "valueField": "difficult",
              "lineColor": "green",
              "balloonText": "<div style='margin:5px; font-size:19px;'>难度值:<b> [[value]]</b></div>",   
              }
            ],
            "chartCursor": {
              "categoryBalloonDateFormat": "JJ:NN, DD MMMM",
              "cursorPosition": "mouse"
            },
            "categoryField": "blockindex",
            "categoryAxis": {
              "gridAlpha": 0,
              "position": "left",
              "labelsEnabled": true,
              "axisColor": "green",
              "color": "white",
              "gridColor": "green",
              "title": "区块高度",
              "titleColor": "white",
              "tickLength": 0
            },
            "export": {
              "enabled": true,
            }
          });
          //alert( 'test---' );
        },
        error: function(){
          alert('test');
        }
        //success: function( result ) {
          //var chart = AmCharts.makeChart("chartdiv",{});    
        //};
      });
    });
  script.
    //var loggerTest = log4js.getLogger('logger');
    //loggerTest.info('test');
    //console.log("work hard start");
    $(document).ready(function(){
        
      var stable = $('#block-table').dataTable( {  
        autoWidth: true,      
        searching: true,
        ordering: false,
        responsive: true,
        lengthChange: false,
        processing: true,
        paging: false,
        info: false,
        ajax: {
          url: '/ext/summary',
          dataSrc: function ( json ) {
            console.log('hello summary' + json.data);
            json.data[0]['height'] = "<a href='/block/" + json.data[0]['hash'] + "'>" + json.data[0]['height'] + "</a>";
            return json.data;
          }
        },
        columns: [
          //{ data: 'height', width: '8%' },
          { data: 'difficulty', width: '10%' },
          //{ data: 'size', width:'10%' },
          //{ data: 'txs', width: '10%' },
          { data: 'supply', width: '15%' },
          //{ data: 'time', width: '20%' },
        ]
      });
      var rtable = $('#recent-table').dataTable( { 
          
        autoWidth: true,      
        searching: false,
        ordering: false,
        responsive: true,
        lengthChange: true,
        processing: true,
        ajax: {
            
          url: '/ext/getlasttxs/0.00000001',
          dataSrc: function ( json ) {
            for ( var i=0;i<json.data.length; i++ ) {
              json.data[i]['timestamp'] = new Date((json.data[i]['timestamp']) * 1000).toLocaleString();

              if (!json.data[i]['txid']) {
                json.data[i]['txid'] = "<em>no transactions</em>";
                json.data[i]['total'] = '';
                json.data[i]['recipients'] = '';
                json.data[i]['timestamp'] = '';
              } else {
                json.data[i]['blockindex'] = "<a href='/block/" + json.data[i]['blockhash'] + "'>" + json.data[i]['blockindex'] + "</a>";
                json.data[i]['txid'] = "<a href='/tx/" + json.data[i]['txid'] + "' class='mono'>" + json.data[i]['blockhash'] + "</a>";
                var amount = json.data[i]['total'] / 100000000;
                json.data[i]['total'] = amount.toFixed(8);
                json.data[i]['recipients'] = json.data[i]['vout'].length;
              }
            }
            return json.data;
          }
        },
        columns: [
          { data: 'blockindex', width: '8%' },
          { data: 'txid', width: '40%' },
          { data: 'recipients', width:'5%' },
          { data: 'total', width: '15%', className: 'text-right' },
          { data: 'timestamp', width: '25%' },
        ]
      });
      setInterval( function () {
        rtable.api().ajax.reload(null, false);
        stable.api().ajax.reload(null, false);
      }, 60000 );
    });
      
  <div class="row"><div class="col-md-offset-5 col-md-2"><label>近期区块难度变化图</label></div><div class="col-md-offset-5"></div><div class="col-md-offset-1 col-md-10"><div id="chartdiv" style="width: 100%; height: 300px;></div></div></div>
  .row
    .col-md-12
      if error !== null        
        .alert.alert-danger.alert-dismissable(role='alert')
          button.close(type='button', data-dismiss='alert') ×
          strong #{settings.locale.ex_error} : #{error}
      if warning !== null        
        .alert.alert-warning.alert-dismissable(role='alert')
          button.close(type='button', data-dismiss='alert') ×
          strong #{settings.locale.ex_warning} #{warning}
  
  .col-md-12
    .panel.panel-default
      .panel-heading
        strong #{settings.locale.ex_latest_transactions}
      table#recent-table.table.table-bordered.table-striped
        thead
          tr
            if settings.baseType === 'ripple'
              th.text-center #{settings.locale.ex_ledger}
            else
              th.text-center #{settings.locale.ex_block}
            th.hidden-xs.text-center #{settings.locale.tx_hash}
            th.hidden-xs.text-center #{settings.locale.tx_recipients}
            th.text-center #{settings.locale.mkt_amount} (#{settings.symbol})
            th.text-center #{settings.locale.timestamp}
        tbody.text-center
    .footer-padding
      
              
